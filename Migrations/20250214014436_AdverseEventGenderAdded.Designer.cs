// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace openfda.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250214014436_AdverseEventGenderAdded")]
    partial class AdverseEventGenderAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AdverseEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DrugId")
                        .HasColumnType("char(36)");

                    b.Property<string>("DrugIndication")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "drugindication");

                    b.Property<string>("DrugName")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "medicinalproduct");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("datetime")
                        .HasAnnotation("Relational:JsonPropertyName", "receivedate");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "patientsex");

                    b.Property<string>("Reaction")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "reactionmeddrapt");

                    b.HasKey("Id");

                    b.HasIndex("DrugId");

                    b.ToTable("AdverseEvents");
                });

            modelBuilder.Entity("Drug", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ActiveIngredient")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "active_ingredient");

                    b.Property<string>("DosageAndAdministration")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "dosage_and_administration");

                    b.Property<string>("InactiveIngredient")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "inactive_ingredient");

                    b.Property<string>("IndicationsAndUsage")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "indications_and_usage");

                    b.Property<Guid>("OpenFdaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PackageLabelPrincipalDisplayPanel")
                        .HasColumnType("longtext");

                    b.Property<string>("Purpose")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "purpose");

                    b.Property<string>("SplProductDataElements")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "spl_product_data_elements");

                    b.Property<string>("Warnings")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "warnings");

                    b.HasKey("Id");

                    b.HasIndex("OpenFdaId");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("OpenFda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "brand_name");

                    b.Property<string>("GenericName")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "generic_name");

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "manufacturer_name");

                    b.HasKey("Id");

                    b.ToTable("OpenFda");
                });

            modelBuilder.Entity("AdverseEvent", b =>
                {
                    b.HasOne("Drug", "Drug")
                        .WithMany("AdverseEvents")
                        .HasForeignKey("DrugId");

                    b.Navigation("Drug");
                });

            modelBuilder.Entity("Drug", b =>
                {
                    b.HasOne("OpenFda", "OpenFda")
                        .WithMany("Drugs")
                        .HasForeignKey("OpenFdaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpenFda");
                });

            modelBuilder.Entity("Drug", b =>
                {
                    b.Navigation("AdverseEvents");
                });

            modelBuilder.Entity("OpenFda", b =>
                {
                    b.Navigation("Drugs");
                });
#pragma warning restore 612, 618
        }
    }
}
